import React, { useState } from 'react';
import { Button, Row, Col } from 'antd';
import {
  CaretLeftOutlined,
  CaretRightOutlined,
  CaretUpOutlined,
  CaretDownOutlined,
} from '@ant-design/icons';


function Page2() {
  const [gridPosition, setGridPosition] = useState({ row: 1, col: 1 });

  const handleMoveLeft = () => {
    if (gridPosition.col > 1) {
      setGridPosition((prevPosition) => ({ ...prevPosition, col: prevPosition.col - 1 }));
    } else if (gridPosition.row === 1 && gridPosition.col === 1) {
      setGridPosition({ row: 2, col: 3 });
    } else if (gridPosition.row === 2 && gridPosition.col === 1) {
      setGridPosition({ row: 1, col: 3 });
    }
  };

  const handleMoveRight = () => {
    if (gridPosition.col < 3) {
      setGridPosition((prevPosition) => ({ ...prevPosition, col: prevPosition.col + 1 }));
    } else if (gridPosition.row === 1 && gridPosition.col === 3) {
      setGridPosition({ row: 2, col: 1 });
    } else if (gridPosition.row === 2 && gridPosition.col === 3) {
      setGridPosition({ row: 1, col: 1 });
    } else {
      setGridPosition({ row: 2, col: 1 });
    }
  };

  const handleMoveUp = () => {
    if (gridPosition.row > 1) {
      setGridPosition((prevPosition) => ({ ...prevPosition, row: prevPosition.row - 1 }));
    } else {
      setGridPosition((prevPosition) => ({ ...prevPosition, row: 2 }));
    }
  };

  const handleMoveDown = () => {
    if (gridPosition.row < 2) {
      setGridPosition((prevPosition) => ({ ...prevPosition, row: prevPosition.row + 1 }));
    } else {
      setGridPosition((prevPosition) => ({ ...prevPosition, row: 1 }));
    }
  };

  const handleRandomPosition = () => {
    setGridPosition({
      row: Math.floor(Math.random() * 2) + 1,
      col: Math.floor(Math.random() * 3) + 1,
    });
  };

  return (
    <div style={{ justifyContent: 'center', alignItems: 'center', height: '100vh' }}>
       <div style={{ marginTop:'5%', marginBottom:'2em', marginLeft:'40%' }}>
        <Button type="primary" shape="round" icon={<CaretLeftOutlined />} onClick={handleMoveLeft} >MoveLeft</Button>
        <Button type="primary" shape="round" icon={<CaretRightOutlined />} onClick={handleMoveRight} >MoveLeft</Button>
        <Button type="primary" shape="round" icon={<CaretUpOutlined />} onClick={handleMoveUp} >MoveLeft</Button>
        <Button type="primary" shape="round" icon={<CaretDownOutlined />} onClick={handleMoveDown} >MoveLeft</Button>
        </div>
      <Row gutter={[16, 16]}>
        <Col span={8}>
          <div
            onClick={handleRandomPosition}
            style={{
              display: 'flex',
              justifyContent: 'center',
              alignItems: 'center',
              backgroundColor: gridPosition.row === 1 && gridPosition.col === 1 ? '#1890ff' : '#f0f0f0',
              borderRadius: 4,
              padding: 16,
              color: '#fff',
              fontWeight: 'bold',
              fontSize: 24,
            }}
          >
            1
          </div>
        </Col>
        <Col span={8}>
          <div 
            onClick={handleRandomPosition}
            style={{
              display: 'flex',
              justifyContent: 'center',
              alignItems: 'center',
              backgroundColor: gridPosition.row === 1 && gridPosition.col === 2 ? '#1890ff' : '#f0f0f0',
              borderRadius: 4,
              padding: 16,
              color: '#fff',
              fontWeight: 'bold',
              fontSize: 24,
            }}
          >
            2
          </div>
        </Col>
        <Col span={8}>
          <div
            onClick={handleRandomPosition}
            style={{
              display: 'flex',
              justifyContent: 'center',
              alignItems: 'center',
              backgroundColor: gridPosition.row === 1 && gridPosition.col === 3 ? '#1890ff' : '#f0f0f0',
              borderRadius: 4,
              padding: 16,
              color: '#fff',
              fontWeight: 'bold',
              fontSize: 24,
            }}
          >
            3
          </div>
        </Col>
        <Col span={8}>
          <div
            onClick={handleRandomPosition}
            style={{
              display: 'flex',
              justifyContent: 'center',
              alignItems: 'center',
              backgroundColor: gridPosition.row === 2 && gridPosition.col === 1 ? '#1890ff' : '#f0f0f0',
              borderRadius: 4,
              padding: 16,
              color: '#fff',
              fontWeight: 'bold',
              fontSize: 24,
            }}
          >
            4
          </div>
        </Col>
        <Col span={8}>
          <div
            onClick={handleRandomPosition}
            style={{
              display: 'flex',
              justifyContent: 'center',
              alignItems: 'center',
              backgroundColor: gridPosition.row === 2 && gridPosition.col === 2 ? '#1890ff' : '#f0f0f0',
              borderRadius: 4,
              padding: 16,
              color: '#fff',
              fontWeight: 'bold',
              fontSize: 24,
            }}
          >
            5
          </div>
        </Col>
        <Col span={8}>
          <div
            onClick={handleRandomPosition}
            style={{
              display: 'flex',
              justifyContent: 'center',
              alignItems: 'center',
              backgroundColor: gridPosition.row === 2 && gridPosition.col === 3 ? '#1890ff' : '#f0f0f0',
              borderRadius: 4,
              padding: 16,
              color: '#fff',
              fontWeight: 'bold',
              fontSize: 24,
            }}
          >
            6 
          </div>
        </Col>
      </Row>
     
    </div>
  );
}

export default Page2;